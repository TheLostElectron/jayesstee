{"version":3,"sources":["../src/jayesstee.form.js"],"names":["templates","field","$div","cn","type","input","$fieldset","$label","label","$input","attrs","password","name","checkbox","legend","$legend","undefined","items","map","checkboxItem","item","radio","radioItem","events","select","$select","selectOption","textarea","$textarea","value","id","for","text","noBreak","$br","properties","checked","$option","selected","Input","opts","border","css","darkPrimary","padding$px","borderRadius$px","margin$px","fontWeight","marginLeft$px","label$c","display","marginRight","minWidth$em","Object","JstForm","inputs","inputsByName","createInputs","$form","Error","push","createInput","vals","getValue"],"mappings":"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","file":"jayesstee.form.js","sourcesContent":["import {jst}   from \"jayesstee\";\n\n\n// Terse set of JstElements for building inputs\nlet templates = {\n  field: field => jst.$div(\n    {cn: \"-field-container\"},\n    templates[field.type] ? templates[field.type](field) : templates.input(field)\n  ),\n\n  input: field => jst.$fieldset(\n    jst.$label(\n      {cn: \"-label\"},\n      field.label\n    ),\n    jst.$input(\n      Object.assign(\n        {\n          type:      field.type ? field.type : \"text\",\n        },\n        field.attrs\n      )\n    )\n  ),\n\n  password: field => jst.$fieldset(\n    jst.$label(\n      {cn: \"-label\"},\n      field.label\n    ),\n    jst.$input(\n      Object.assign({type: \"password\", name: field.name}, field.attrs)\n    )\n  ),\n\n  checkbox: field => jst.$fieldset(\n    field.legend ? jst.$legend(field.legend) : undefined,\n    field.label ? jst.$legend(field.label) : undefined,\n    field.items.map(item => templates.checkboxItem(field.name, item))\n  ),\n\n  radio: field => jst.$fieldset(\n    field.legend ? jst.$legend(field.legend) : undefined,\n    field.label ? jst.$legend(field.label) : undefined,\n    field.items.map(item => templates.radioItem(field.name, field.events, item))\n  ),\n\n  select: field => jst.$fieldset(\n    field.label ? jst.$label({cn: \"-label\"}, field.label) : undefined,\n    jst.$select(\n      field.attrs,\n      field.items.map(item => templates.selectOption(field.name, item))\n    )\n  ),\n\n  textarea: field => jst.$textarea(\n    field.attrs,\n    field.value\n  ),\n\n  radioItem: (name, events, item) => [\n    jst.$input(\n      {cn: \"-radio-item\", type: \"radio\", id: item.id, name: name, events: events}\n    ),\n    jst.$label(\n      {cn: \"-radio-item-label\", for: item.id},\n      item.text || item.value\n    ),\n    item.noBreak ? undefined : jst.$br()\n  ],\n\n  checkboxItem: (name, events, item) => [\n    jst.$input(\n      {type:       \"checkbox\",\n       id:         item.id,\n       name:       name,\n       value:      item.value,\n       events:     events,\n       properties: item.checked ? [\"checked\"] : undefined\n      }\n    ),\n    jst.$label(\n      {cn: \"-checkbox-item-label\", for: item.id},\n      item.text || item.value\n    ),\n    item.noBreak ? undefined : jst.$br()    \n  ],\n\n  selectOption: (name, item) => [\n    jst.$option(\n      {cn: \"-select-item\",\n       value: item.id || item.name || item.value,\n       properties: item.checked || item.selected ? [\"selected\"] : undefined\n      },\n      item.text || item.name || item.id || item.value\n    )\n  ]\n\n};\n\n\nclass Input extends jst.Object {\n  constructor(opts) {\n    super();\n    this.opts = opts;\n  }\n\n  // CSS that is local to this class\n  cssLocal() {\n\n    return {\n\n      '.input input': {\n        border:     [\"1px\", \"solid\", css.darkPrimary],\n        padding$px: 2\n      },\n\n      '.input fieldset': {\n        border:          \"none\",\n        borderRadius$px: 3,\n        margin$px:       0\n      },\n\n      '.input input[type=button]': {\n        margin$px:       5,\n        borderRadius$px: 3,\n        padding$px:      4\n      },\n\n      '.input legend': {\n        fontWeight: \"bold\"\n      },\n\n      '.checkbox-item-label, .radio-item-label': {\n        margin$px: [0, 5]\n      },\n\n      '.input input[type=checkbox], .input input[type=radio]': {\n        marginLeft$px: 8\n      },\n\n      label$c: {\n        display:     \"inline-block\",\n        fontWeight:  \"bold\",\n        marginRight: 10,\n        minWidth$em: 6\n      }\n    };\n  }\n\n  render() {\n    return [\n      jst.$div(\n        {cn: \"-input\"},\n        templates.field(this)\n      )\n    ];\n  }\n}\n\n\nexport class JstForm extends jst.Object {\n  constructor(opts) {\n    super();\n    // if (typeof(opts.name) == \"undefined\") {\n    //   throw Error(\"opts.name must be defined\");\n    // }\n    this.name         = opts.name;\n    this.events       = opts.events;\n    this.inputs       = [];\n    this.inputsByName = {};\n\n    this.createInputs(opts.inputs);\n    \n  }\n\n  // If you decide to just render the form, then\n  // it will simply render all the inputs in order\n  render() {\n    return jst.$form(\n      {name: this.name, events: this.events},\n      this.inputs\n    );\n  }\n\n  createInput(opts) {\n    if (typeof(opts.name) == \"undefined\") {\n      throw Error(\"opts.name must be defined on all inputs\");\n    }\n    let input = new Input(opts);\n    this.inputs.push(input);\n    this.inputsByName[opts.name] = input;\n    return input;\n  }\n\n  createInputs(inputs) {\n    inputs.map(input => this.createInput(input));\n  }\n\n  getValues() {\n    let vals = {};\n    for (let name of Object.keys(this.inputsByName)) {\n      vals[name] = this.inputsByName[name].getValue();\n    }\n    return vals;\n  }\n  \n}\n"]}