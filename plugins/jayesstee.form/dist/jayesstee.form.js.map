{"version":3,"sources":["../src/jayesstee.form.js"],"names":["Input","opts","css","attrs","ref","events","type","input","oldEvent","e","inputChanged","localCss","instanceCss","cssInstance","padding$px","border","borderRadius$px","margin$px","fontWeight","marginLeft$px","completionList$c","display","position","fontSize","backgroundColor","completionItem$c","border$px","rgba","completionItem$c$hover","cursor","label$c","marginRight","minWidth$em","$div","cn","renderField","field","renderinput","$fieldset","console","log","label","undefined","$label","$input","completionValues","map","click","completionSelect","item","name","legend","$legend","items","renderCheckboxItem","renderRadioItem","$select","renderSelectOption","$textarea","value","id","for","text","noBreak","$br","properties","checked","$option","selected","inputEl","el","val","refresh","list","doCompletion","curr","getValue","length","re","RegExp","filter","word","match","splice","setValue","focus","Object","JstForm","inputs","inputsByName","createInputs","$form","Error","optsWithRef","push","createInput","vals"],"mappings":"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","file":"jayesstee.form.js","sourcesContent":["import {jst}   from \"jayesstee\";\n\n\nclass Input extends jst.Object {\n  constructor(opts, css) {\n    super();\n    this.opts = Object.assign({attrs: {}}, opts);\n    if (opts.ref) {\n      this.opts.attrs.ref = opts.ref;\n    }\n    if (opts.events) {\n      let events = Object.assign({}, opts.events);\n      if (!opts.type || opts.type === \"text\") {\n        if (events.input) {\n          let oldEvent = events.input;\n          events.input = e => {oldEvent(e); this.inputChanged(e);};\n        }\n        else {\n          events.input = e => this.inputChanged(e);\n        }\n      }\n      this.opts.attrs.events = events;\n    }\n    this.localCss = css;\n\n    if (opts.css) {\n      this.instanceCss = Object.assign({}, opts.css);\n      this.cssInstance = () => this.instanceCss;\n    }\n    \n  }\n\n  // CSS that is local to this class\n  cssLocal() {\n    return [\n      {\n        '.input input': {\n          padding$px: 2\n        },\n\n        '.input fieldset': {\n          border:          \"none\",\n          borderRadius$px: 3,\n          margin$px:       0\n        },\n\n        '.input input[type=button]': {\n          margin$px:       5,\n          borderRadius$px: 3,\n          padding$px:      4\n        },\n\n        '.input legend': {\n          fontWeight: \"bold\"\n        },\n\n        '.checkbox-item-label, .radio-item-label': {\n          margin$px: [0, 5]\n        },\n\n        '.input input[type=checkbox], .input input[type=radio]': {\n          marginLeft$px: 8\n        },\n\n        completionList$c: {\n          display: \"table\",\n          position: \"absolute\",\n          padding$px: 0,\n          fontSize: '70%',\n          backgroundColor: \"#eee\",\n          \n        },\n\n        completionItem$c: {\n          padding$px: [2, 5],\n          border$px: [\"solid\", 1, jst.rgba(0,0,0,0.1)]\n        },\n\n        completionItem$c$hover: {\n          backgroundColor: \"#fff\",\n          cursor: \"pointer\"\n        },\n\n        label$c: {\n          display:     \"inline-block\",\n          fontWeight:  \"bold\",\n          marginRight: 10,\n          minWidth$em: 6\n        }\n      },\n      this.localCss\n    ];\n  }\n\n  render() {\n    return [\n      jst.$div(\n        {cn: \"-input --input\"},\n        this.renderField(this.opts)\n      )\n    ];\n  }\n\n  renderField (field) {\n    return jst.$div(\n      {cn: \"-field-container\"},\n      this[\"render\" + field.type] ? this[\"render\" + field.type](field) : this.renderinput(field)\n    );\n  }\n\n  renderinput(field) {\n    return jst.$fieldset(\n      console.log(\"field:\",field),\n      !field.label ?\n        undefined :\n        jst.$label(\n        {cn: \"-label --label\"},\n        field.label\n      ),\n      jst.$div(\n        {cn: \"-textInputContainer\"},\n        jst.$input(\n          Object.assign(\n            {\n              type:      field.type ? field.type : \"text\",\n            },\n            field.attrs\n          )\n        ),\n        console.log(\"no values:\", field),\n        !field.completionValues ?\n          undefined :\n          jst.$div(\n            {cn: \"-completionList\"},\n            field.completionValues.map(item => \n                                       jst.$div({cn: \"-completionItem\",\n                                                 events: {click: e => this.completionSelect(item, e)}},\n                                                item\n                                               )\n                                      )\n          )\n      )\n    );\n  }\n\n  renderpassword(field) {\n    return jst.$fieldset(\n      jst.$label(\n        {cn: \"-label --label\"},\n        field.label\n      ),\n      jst.$input(\n        Object.assign({type: \"password\", name: field.name}, field.attrs)\n      )\n    );\n  }\n\n  rendercheckbox(field) {\n    return jst.$fieldset(\n      field.legend ? jst.$legend(field.legend) : undefined,\n      field.label ? jst.$legend(field.label) : undefined,\n      field.items.map(item => this.renderCheckboxItem(field.name, item))\n    );\n  }\n\n  renderradio(field) {\n    return jst.$fieldset(\n      field.legend ? jst.$legend(field.legend) : undefined,\n      field.label ? jst.$legend(field.label) : undefined,\n      field.items.map(item => this.renderRadioItem(field.name, field.events, item))\n    );\n  }\n\n  renderselect(field) {\n    return jst.$fieldset(\n      field.label ? jst.$label({cn: \"-label --label\"}, field.label) : undefined,\n      jst.$select(\n        field.attrs,\n        field.items.map(item => this.renderSelectOption(field.name, item))\n      )\n    );\n  }\n\n  renderTextarea(field) {\n    return jst.$textarea(\n      field.attrs,\n      field.value\n    );\n  }\n  renderRadioItem(name, events, item) {\n    return [\n      jst.$input(\n        {cn: \"-radio-item\", type: \"radio\", id: item.id, name: name, events: events}\n      ),\n      jst.$label(\n        {cn: \"-radio-item-label\", for: item.id},\n        item.text || item.value\n      ),\n      item.noBreak ? undefined : jst.$br()\n    ];\n  }\n  \n  renderCheckboxItem(name, events, item) {\n    return [\n      jst.$input(\n        {type:       \"checkbox\",\n         id:         item.id,\n         name:       name,\n         value:      item.value,\n         events:     events,\n         properties: item.checked ? [\"checked\"] : undefined\n        }\n      ),\n      jst.$label(\n        {cn: \"-checkbox-item-label\", for: item.id},\n        item.text || item.value\n      ),\n      item.noBreak ? undefined : jst.$br()    \n    ];\n  }\n\n  renderSelectOption(name, item) {\n    return [\n      jst.$option(\n        {cn: \"-select-item\",\n         value: item.id || item.name || item.value,\n         properties: item.checked || item.selected ? [\"selected\"] : undefined\n        },\n        item.text || item.name || item.id || item.value\n      )\n    ];\n  }\n\n  getValue() {\n    if (this.inputEl && this.inputEl.el) {\n      return this.inputEl.el.value;\n    }\n    return undefined;\n  }\n\n  setValue(val) {\n    if (this.inputEl && this.inputEl.el) {\n      this.inputEl.el.value = val;\n    }\n    this.inputEl.value = val;\n    this.opts.completionValues = undefined;\n    this.refresh();\n  }\n\n  setCompletionValues(list) {\n    this.completionValues = list;\n    this.doCompletion();\n  }\n\n  doCompletion() {\n    if (this.completionValues && this.type !== \"text\") {\n      let curr = this.getValue() || \"\";\n      if (curr.length == 1) {\n        let re   = new RegExp(\"^\" + curr, \"i\");\n        this.opts.completionValues = this.completionValues.filter(\n          word => word && word.match(re));\n      }\n      else if (curr.length > 1) {\n        let re   = new RegExp(curr, \"i\");\n        this.opts.completionValues = this.completionValues.filter(\n          word => word && word.match(re));\n      }\n      else {\n        this.opts.completionValues = [];\n      }\n      if (this.opts.completionValues.length > 8) {\n        this.opts.completionValues.splice(8);\n      }\n      this.refresh();\n    }\n  }\n\n  completionSelect(item, e) {\n    this.setValue(item);\n  }\n\n  inputChanged(e) {\n    this.doCompletion();\n  }\n\n  focus() {\n    if (this.inputEl && this.inputEl.el) {\n      this.inputEl.el.focus();\n    }\n  }\n  \n}\n\n\nexport class JstForm extends jst.Object {\n  constructor(opts) {\n    super();\n    // if (typeof(opts.name) == \"undefined\") {\n    //   throw Error(\"opts.name must be defined\");\n    // }\n    this.name         = opts.name;\n    this.events       = opts.events;\n    this.css          = opts.css || {};\n    this.inputs       = [];\n    this.inputsByName = {};\n\n    this.createInputs(opts.inputs);\n    \n  }\n\n  // If you decide to just render the form, then\n  // it will simply render all the inputs in order\n  render() {\n    return jst.$form(\n      {name: this.name, events: this.events},\n      this.inputs\n    );\n  }\n\n  createInput(opts) {\n    if (typeof(opts.name) == \"undefined\") {\n      throw Error(\"opts.name must be defined on all inputs\");\n    }\n    let optsWithRef = Object.assign({ref: \"inputEl\"}, opts);\n    let input = new Input(optsWithRef, this.css);\n    this.inputs.push(input);\n    this.inputsByName[opts.name] = input;\n    return input;\n  }\n\n  createInputs(inputs) {\n    if (inputs && inputs.length) {\n      inputs.map(input => this.createInput(input));\n    }\n  }\n\n  getValues() {\n    let vals = {};\n    for (let name of Object.keys(this.inputsByName)) {\n      vals[name] = this.inputsByName[name].getValue();\n    }\n    return vals;\n  }\n  \n}\n"]}